variables:
  myInitials: 'jb' # Updated initials
  coreInfrastructureName: 'visma-demo-app-$(myInitials)-$(Environment.Name)'
  webAppName: '$(coreInfrastructureName)'
  poolName: 'windows-latest'
  System.Debug: 'false'
  azureSubscriptionName: 'jb-visual-studio-professional'
  resourceGroupName: 'visma-demo-app-staging-$(myInitials)'
  armTemplateParameters: '-_artifactsLocation $(artifactsLocation) -_artifactsLocationSasToken "$(artifactsLocationSasToken)" -coreInfrastructureName $(coreInfrastructureName) -webAppName $(webAppName)'

trigger:
  branches:
    include:
      - master
      - refs/tags/v*
pr:
- master

stages:
- stage: Build
  jobs:
  - job: Build
    pool: '$(poolName)'
    steps:
    - task: AzureFileCopy@3
      displayName: 'Stage files'
      inputs:
        SourcePath: '$(System.DefaultWorkingDirectory)/templates'
        azureSubscription: '$(azureSubscriptionName)'
        Destination: 'AzureBlob'
        storage: 'racstagingarea'
        ContainerName: 'staging'
        outputStorageUri: 'artifactsLocation'
        outputStorageContainerSasToken: 'artifactsLocationSasToken'
        sasTokenTimeOutInMinutes: '240'

    - task: AzureResourceGroupDeployment@2
      displayName: 'Validate ARM Templates'
      inputs:
        azureSubscription: $(azureSubscriptionName)
        resourceGroupName: '$(resourceGroupName)'
        location: 'West Europe'
        templateLocation: 'URL of the file'
        csmFileLink: $(artifactsLocation)deployment/deployment.json$(artifactsLocationSasToken)
        csmParametersFileLink: $(artifactsLocation)deployment/deployment.parameters.json$(artifactsLocationSasToken)
        overrideParameters: '$(armTemplateParameters)'
        deploymentMode: 'Validation'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish ARM templates'
      inputs:
        path: $(System.DefaultWorkingDirectory)/templates
        artifact: templates

- stage: Deployment_Dev
  jobs:
  - deployment: deployment_dev
    displayName: 'Dev'
    pool: '$(poolName)'
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureFileCopy@3
              condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
              displayName: 'Stage files'
              inputs:
                SourcePath: '$(Pipeline.Workspace)/templates'
                azureSubscription: '$(azureSubscriptionName)'
                Destination: 'AzureBlob'
                storage: 'racstagingarea'
                ContainerName: 'staging'
                outputStorageUri: 'artifactsLocation'
                outputStorageContainerSasToken: 'artifactsLocationSasToken'
                sasTokenTimeOutInMinutes: '240'

            - task: AzureResourceGroupDeployment@2
              condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
              displayName: 'Provision Infrastructure'
              inputs:
                azureSubscription: $(azureSubscriptionName)
                resourceGroupName: '$(resourceGroupName)-$(Environment.Name)'
                location: 'West Europe'
                templateLocation: 'URL of the file'
                csmFileLink: $(artifactsLocation)deployment/deployment.json$(artifactsLocationSasToken)
                csmParametersFileLink: $(artifactsLocation)deployment/deployment.parameters.json$(artifactsLocationSasToken)
                overrideParameters: '$(armTemplateParameters)'

- stage: Deployment_Test
  jobs:
  - deployment: deployment_test
    displayName: 'Test'
    pool: '$(poolName)'
    environment: 'test'
    strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureFileCopy@3
              condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
              displayName: 'Stage files'
              inputs:
                SourcePath: '$(Pipeline.Workspace)/templates'
                azureSubscription: '$(azureSubscriptionName)'
                Destination: 'AzureBlob'
                storage: 'racstagingarea'
                ContainerName: 'staging'
                outputStorageUri: 'artifactsLocation'
                outputStorageContainerSasToken: 'artifactsLocationSasToken'
                sasTokenTimeOutInMinutes: '240'

            - task: AzureResourceGroupDeployment@2
              condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
              displayName: 'Provision Infrastructure'
              inputs:
                azureSubscription: $(azureSubscriptionName)
                resourceGroupName: '$(resourceGroupName)-$(Environment.Name)'
                location: 'West Europe'
                templateLocation: 'URL of the file'
                csmFileLink: $(artifactsLocation)deployment/deployment.json$(artifactsLocationSasToken)
                csmParametersFileLink: $(artifactsLocation)deployment/deployment.parameters.json$(artifactsLocationSasToken)
                overrideParameters: '$(armTemplateParameters)'

- stage: Deployment_Prod
  jobs:
  - deployment: deployment_prod
    displayName: 'Prod'
    pool: '$(poolName)'
    environment: 'prod'
    strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureFileCopy@3
              condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
              displayName: 'Stage files'
              inputs:
                SourcePath: '$(Pipeline.Workspace)/templates'
                azureSubscription: '$(azureSubscriptionName)'
                Destination: 'AzureBlob'
                storage: 'racstagingarea'
                ContainerName: 'staging'
                outputStorageUri: 'artifactsLocation'
                outputStorageContainerSasToken: 'artifactsLocationSasToken'
                sasTokenTimeOutInMinutes: '240'

            - task: AzureResourceGroupDeployment@2
              condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
              displayName: 'Provision Infrastructure'
              inputs:
                azureSubscription: $(azureSubscriptionName)
                resourceGroupName: '$(resourceGroupName)-$(Environment.Name)'
                location: 'West Europe'
                templateLocation: 'URL of the file'
                csmFileLink: $(artifactsLocation)deployment/deployment.json$(artifactsLocationSasToken)
                csmParametersFileLink: $(artifactsLocation)deployment/deployment.parameters.json$(artifactsLocationSasToken)
                overrideParameters: '$(armTemplateParameters)'
