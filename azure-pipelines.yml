variables:
  myInitials: 'jb' # Lower case initials
  coreInfrastructureName: 'visma-demo-app-$(myInitials)-$(Environment.Name)'
  webAppName: '$(coreInfrastructureName)'
  stagingResourceGroupName: 'visma-demo-app-stg'
  stagingStorageAccountName: 'vimsademoappstg$(myInitials)'
  poolName: 'windows-latest'
  System.Debug: 'false'
  azureSubscriptionName: 'jb-visual-studio-professional'
  resourceGroupName: 'visma-demo-app-staging-$(myInitials)'
  armTemplateParameters: '-_artifactsLocation $(artifactsLocation) -_artifactsLocationSasToken "$(artifactsLocationSasToken)" -coreInfrastructureName $(coreInfrastructureName) -webAppName $(webAppName)'

# trigger:
#   branches:
#     include:
#       - master
#       - refs/tags/v*
# pr:
# - master


# GitHub Repo that conatins build templates. Reference https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=vsts#using-other-repositories
resources:
  repositories:
  - repository: azureDevOpsTemplates
    type: github
    name: janisBerz/rac-azure-devops-templates
    endpoint: 'github.com_janisBerz'
    ref: buildpackage-only  # optional ref to pin to

stages:
- stage: Build
  jobs:
  - template: jobs/dotNetCore.yml@azureDevOpsTemplates # Template reference
    parameters:
      webAppName: $(webAppName)

  - job: Validate_ARM_templates
    displayName: 'Validate ARM templates'
    pool:
      vmImage: '$(poolName)'
    steps:

    - task: AzurePowerShell@4
      inputs:
        azureSubscription: $(azureSubscriptionName)
        scriptType: 'filePath' # Optional. Options: filePath, inlineScript
        scriptPath: .\scripts\New-StorageAccount.ps1
        azurePowerShellVersion: '3.1.0' # Required. Options: latestVersion, otherVersion
        scriptArguments: -stagingResourceGroupName $(stagingResourceGroupName) -stagingStorageAccountName $(stagingStorageAccountName)

    - task: AzureFileCopy@3
      displayName: 'Stage files'
      inputs:
        SourcePath: '$(System.DefaultWorkingDirectory)/templates'
        azureSubscription: '$(azureSubscriptionName)'
        Destination: 'AzureBlob'
        storage: '$(stagingStorageAccountName)'
        ContainerName: 'staging'
        outputStorageUri: 'artifactsLocation'
        outputStorageContainerSasToken: 'artifactsLocationSasToken'
        sasTokenTimeOutInMinutes: '240'

    - task: AzureResourceGroupDeployment@2
      displayName: 'Validate ARM Templates'
      inputs:
        azureSubscription: $(azureSubscriptionName)
        resourceGroupName: '$(resourceGroupName)'
        location: 'West Europe'
        templateLocation: 'URL of the file'
        csmFileLink: $(artifactsLocation)deployment/deployment.json$(artifactsLocationSasToken)
        csmParametersFileLink: $(artifactsLocation)deployment/deployment.parameters.json$(artifactsLocationSasToken)
        overrideParameters: '$(armTemplateParameters)'
        deploymentMode: 'Validation'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish ARM templates'
      inputs:
        path: $(System.DefaultWorkingDirectory)/templates
        artifact: templates

- stage: Deployment_Dev
  jobs:
  - deployment: deployment_dev
    displayName: 'Dev'
    pool:
      vmImage: '$(poolName)'
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureFileCopy@3
              displayName: 'Stage files'
              inputs:
                SourcePath: '$(Pipeline.Workspace)/templates'
                azureSubscription: '$(azureSubscriptionName)'
                Destination: 'AzureBlob'
                storage: '$(stagingStorageAccountName)'
                ContainerName: 'staging'
                outputStorageUri: 'artifactsLocation'
                outputStorageContainerSasToken: 'artifactsLocationSasToken'
                sasTokenTimeOutInMinutes: '240'

            - task: AzureResourceGroupDeployment@2
              displayName: 'Provision Infrastructure'
              inputs:
                azureSubscription: $(azureSubscriptionName)
                resourceGroupName: '$(resourceGroupName)-$(Environment.Name)'
                location: 'West Europe'
                templateLocation: 'URL of the file'
                csmFileLink: $(artifactsLocation)deployment/deployment.json$(artifactsLocationSasToken)
                csmParametersFileLink: $(artifactsLocation)deployment/deployment.parameters.json$(artifactsLocationSasToken)
                overrideParameters: '$(armTemplateParameters)'

            - template: jobs/deployment.yml@azureDevOpsTemplates
              parameters:
                webAppName: '$(webAppName)'

- stage: Deployment_Test
  jobs:
  - deployment: deployment_test
    displayName: 'Test'
    pool:
      vmImage: '$(poolName)'
    environment: 'test'
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureFileCopy@3
              displayName: 'Stage files'
              inputs:
                SourcePath: '$(Pipeline.Workspace)/templates'
                azureSubscription: '$(azureSubscriptionName)'
                Destination: 'AzureBlob'
                storage: '$(stagingStorageAccountName)'
                ContainerName: 'staging'
                outputStorageUri: 'artifactsLocation'
                outputStorageContainerSasToken: 'artifactsLocationSasToken'
                sasTokenTimeOutInMinutes: '240'

            - task: AzureResourceGroupDeployment@2
              displayName: 'Provision Infrastructure'
              inputs:
                azureSubscription: $(azureSubscriptionName)
                resourceGroupName: '$(resourceGroupName)-$(Environment.Name)'
                location: 'West Europe'
                templateLocation: 'URL of the file'
                csmFileLink: $(artifactsLocation)deployment/deployment.json$(artifactsLocationSasToken)
                csmParametersFileLink: $(artifactsLocation)deployment/deployment.parameters.json$(artifactsLocationSasToken)
                overrideParameters: '$(armTemplateParameters)'

- stage: Deployment_Prod
  jobs:
  - deployment: deployment_prod
    displayName: 'Prod'
    pool:
      vmImage: '$(poolName)'
    environment: 'prod'
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureFileCopy@3
              displayName: 'Stage files'
              inputs:
                SourcePath: '$(Pipeline.Workspace)/templates'
                azureSubscription: '$(azureSubscriptionName)'
                Destination: 'AzureBlob'
                storage: '$(stagingStorageAccountName)'
                ContainerName: 'staging'
                outputStorageUri: 'artifactsLocation'
                outputStorageContainerSasToken: 'artifactsLocationSasToken'
                sasTokenTimeOutInMinutes: '240'

            - task: AzureResourceGroupDeployment@2
              displayName: 'Provision Infrastructure'
              inputs:
                azureSubscription: $(azureSubscriptionName)
                resourceGroupName: '$(resourceGroupName)-$(Environment.Name)'
                location: 'West Europe'
                templateLocation: 'URL of the file'
                csmFileLink: $(artifactsLocation)deployment/deployment.json$(artifactsLocationSasToken)
                csmParametersFileLink: $(artifactsLocation)deployment/deployment.parameters.json$(artifactsLocationSasToken)
                overrideParameters: '$(armTemplateParameters)'
